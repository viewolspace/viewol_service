<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Product">
	<sql id="selectCommon">
		SELECT 	a.id,
				a.company_id,
				a.category_id,
				a.STATUS,
				a.NAME,
				a.image,
				a.pdf_url,
				a.pdf_name,
				a.is_recommend,
				a.recommend_num,
				a.c_time,
				a.m_time,
				a.seq,
				a.re_img,
				a.top_num,
				a.see_num,
				a.praise_num,
				a.comment_num,
				a.award
	</sql>
	<select id="select" parameterType="int" resultType="Product">
		<include refid="selectCommon"/>
		,a.content
		from viewol.product a where id = #{id}
	</select>

	<select id="listProductByIds" parameterType="map" resultType="Product">
		<include refid="selectCommon"/>

		from viewol.product a where id in

		<foreach collection="ids" index="index" item="id" open="(" separator="," close=")">
			#{id}
		</foreach>

	</select>

	<insert id="insert" parameterType="Product"  useGeneratedKeys="true" keyColumn="id" keyProperty="id">
		<selectKey keyProperty="id" resultType="int" order="AFTER">
			SELECT LAST_INSERT_ID()
		</selectKey>
			INSERT INTO viewol.product
									(
									company_id,
									category_id,
									STATUS,
									NAME,
									image,
									content,
									pdf_url,
									pdf_name,
									is_recommend,
									recommend_num,
									c_time,
									m_time,
									re_img,
									top_num
									)
									VALUES
									(
									#{companyId},
									#{categoryId},
									#{status},
									#{name},
									#{image},
									#{content},
									#{pdfUrl},
									#{pdfName},
									#{isRecommend},
									#{recommendNum},
									#{cTime},
									#{mTime},
									#{reImg},
									#{topNum}
									)

	</insert>


	<update id="update" parameterType="Product">

			UPDATE viewol.product
						SET

						company_id = #{companyId} ,
						category_id = #{categoryId} ,
						STATUS = #{status} ,
						NAME = #{name} ,
						image = #{image} ,
						content = #{content} ,
						pdf_url = #{pdfUrl} ,
						pdf_name = #{pdfName} ,
						is_recommend = #{isRecommend} ,
						recommend_num = #{recommendNum} ,
						m_time = #{mTime},
						seq = #{seq},
						re_img=#{reImg},
						top_num=#{topNum}

						WHERE
						id = #{id}
	</update>
	<update id="updateRecommend" parameterType="map">
		UPDATE  product set  is_recommend = #{isRecommend} , recommend_num = #{recommendNum} where id = #{id}
	</update>

	<update id="updateTopNum" parameterType="map">
		UPDATE  product set  top_num = #{topNum}   where id = #{id}
	</update>

	<update id="updateSeq" parameterType="map">
		UPDATE  product set  seq = #{seq} where id = #{id}
	</update>


	<update id="updateInteractNum" parameterType="map">
		UPDATE  viewol.product
		<set>
			<if test="seeNum != null  and seeNum != 0">
				see_num = see_num+1,
			</if>

			<if test="praiseNum != null  and praiseNum != 0">
				praise_num = praise_num+1,
			</if>

			<if test="commentNum != null  and commentNum != 0">
				comment_num = comment_num+1,
			</if>
		</set>
		 where id = #{id}
	</update>


	<update id="updateStatus" parameterType="map">
		UPDATE  product set  status = #{status}   where id = #{id}
	</update>

	<select id="queryRecommentProduct" resultType="Product" parameterType="map">
		<include refid="selectCommon"></include>
		from product a , expo_product b where a.id = b.product_id
		and b.expo_id = #{expoId} and is_recommend=1 order by recommend_num
	</select>

	<select id="queryTopProduct" resultType="Product" parameterType="map">
		<include refid="selectCommon"></include>
		from product a , expo_product b where a.id = b.product_id
		and b.expo_id = #{expoId} and top_num > 0  order by top_num
	</select>

	<delete id="delete" parameterType="int">
		delete from product where id = #{id}
	</delete>

	<!--管理平台使用查询展商-->
	<sql id="sql_count">
		select count(*)
	</sql>

	<sql id="sql_where">
		FROM product a , expo_product b
		<where>
			a.id = b.product_id
			and b.expo_id = #{expoId}

			<if test="status != null">
				and status = #{status}
			</if>

			<if test="companyId != null  and companyId != 0">
				and company_id = #{companyId}
			</if>

			<if test="lastSeq != null  and lastSeq != 0">
				<![CDATA[
					AND a.seq < #{lastSeq}
				]]>
			</if>

			<if test="categoryId != null and categoryId != ''">
				and category_id  LIKE concat(concat('%',#{categoryId}),'%')
			</if>

			<if test="award != null and award != 0">
				and award =1
			</if>

			<if test="name != null and name != ''">
				AND name LIKE concat(concat('%',#{name}),'%')
			</if>
		</where>

	</sql>

	<sql id="sql_order">
		order by a.id desc
	</sql>

	<select id="findByParams_count" parameterType="java.util.HashMap" resultType="int">
		<include refid="sql_count" />
		<include refid="sql_where" />
	</select>
	<select id="findByParams" parameterType="java.util.HashMap" resultType="Product">
		<include refid="selectCommon" />
		<include refid="sql_where" />
		<include refid="sql_order" />
	</select>

	<select id="listProduct" parameterType="java.util.HashMap" resultType="Product">
		<include refid="selectCommon" />
		<include refid="sql_where" />
		order by a.seq desc limit 0 , #{num}
	</select>

	<select id="comProductCount" parameterType="java.util.HashMap" resultType="int">
		select count(*) from product where company_id = #{companyId}
	</select>


</mapper>